import React, { useEffect, useState } from "react";
import { useWebSocket } from "../../hooks/useWebSocket";


export const ChatComponent = ({ roomId }: { roomId: number }) => {
    const { isConnected, connectWebSocket, sendMessage, messages,loadMoreMessages, hasMoreMessages, disconnectWebSocket, invitations, markMessagesAsRead } = useWebSocket(roomId);

    const [message, setMessage] = useState("");

    useEffect(() => {
        markMessagesAsRead(); 
    }, [connectWebSocket]);

    return (
        <div>
            <h2>–ß–∞—Ç-–∫–æ–º–Ω–∞—Ç–∞ {roomId}</h2>
            <div>
                {isConnected ? "üü¢ –û–Ω–ª–∞–π–Ω" : "üî¥ –û—Ñ—Ñ–ª–∞–π–Ω"}
            </div>
            <div>
            <button onClick={connectWebSocket} disabled={isConnected}>
                {isConnected ? "–ü–æ–¥–∫–ª—é—á–µ–Ω–æ" : "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è"}
            </button>
            <button onClick={disconnectWebSocket} disabled={!isConnected}>
                –û—Ç–∫–ª—é—á–∏—Ç—å—Å—è
            </button>
            {isConnected&&
            <div>
                <input
                    type="text"
                    value={message}
                    onChange={(e) => setMessage(e.target.value)}
                    placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
                />
                <button
                    onClick={() => {
                        sendMessage(message);
                        setMessage(""); // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
                    }}
                    disabled={!isConnected || !message}
                >–û—Ç–ø—Ä–∞–≤–∏—Ç—å
                </button>
            </div>}
        </div>

            <div>
                <h3>–°–æ–æ–±—â–µ–Ω–∏—è:</h3>
                {messages.map((msg) => (
                    <div key={msg.id}>
                        <strong>{msg.sender}:</strong> {msg.text}
                    </div>
                ))}
            </div>
            <button onClick={loadMoreMessages} disabled={!hasMoreMessages}>
                –ü—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            </button>

            <div>
                <h3>–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:</h3>
                {invitations.map((inv, index) => (
                    <div key={index}>
                        üì© –í–∞—Å –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –≤: {inv.conversation.name}
                    </div>
                ))}
            </div>

            <input 
                type="text" 
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                onKeyDown={(e) => {
                    if (e.key === "Enter") sendMessage(e.currentTarget.value);
                }}
            />
        </div>
    );
};
