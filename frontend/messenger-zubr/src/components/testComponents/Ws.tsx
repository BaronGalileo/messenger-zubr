import React, { useEffect } from "react";
import { useWebSocket } from "../../hooks/useWebSocket";


export const ChatComponent = ({ roomId }: { roomId: number }) => {
    const { isConnected, connectWebSocket, sendMessage, messages, invitations, markMessagesAsRead } = useWebSocket(roomId);

    useEffect(() => {
        connectWebSocket();
        markMessagesAsRead(); // –û—Ç–º–µ—Ç–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
    }, [connectWebSocket, markMessagesAsRead]);

    return (
        <div>
            <h2>–ß–∞—Ç-–∫–æ–º–Ω–∞—Ç–∞ {roomId}</h2>
            <div>
                {isConnected ? "üü¢ –û–Ω–ª–∞–π–Ω" : "üî¥ –û—Ñ—Ñ–ª–∞–π–Ω"}
            </div>

            <div>
                <h3>–°–æ–æ–±—â–µ–Ω–∏—è:</h3>
                {messages.map((msg) => (
                    <div key={msg.id}>
                        <strong>{msg.sender}:</strong> {msg.text}
                    </div>
                ))}
            </div>

            <div>
                <h3>–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:</h3>
                {invitations.map((inv, index) => (
                    <div key={index}>
                        üì© –í–∞—Å –ø—Ä–∏–≥–ª–∞—Å–∏–ª–∏ –≤: {inv.conversation.name}
                    </div>
                ))}
            </div>

            <input 
                type="text" 
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                onKeyDown={(e) => {
                    if (e.key === "Enter") sendMessage(e.currentTarget.value);
                }}
            />
        </div>
    );
};
